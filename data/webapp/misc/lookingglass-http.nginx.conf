server {

	# Comment out/delete IPv6 line to only listen/serve IPv4
	listen 80 default_server;
	listen [::]:80 default_server ipv6only=on;
	
	# 
	server_name XYZ;
	root /var/www/html/LookingGlass;

	# Individual logs for LookingGlass
	access_log /var/log/nginx/lookingglass.access.log;
	error_log  /var/log/nginx/lookingglass.error.log;

	# Set index and use UTF-8
	index index.php;
	charset utf-8;

	# Avoid clickjacking. If you need to allow [i]frames, you can use SAMEORIGIN
	# or even set an uri with ALLOW-FROM uri
	add_header X-Frame-Options SAMEORIGIN;
	add_header X-Content-Type-Options "nosniff";
	add_header X-XSS-Protection "1; mode=block";
	add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' browser-update.org; object-src 'none'; style-src 'self' 'unsafe-inline'; img-src 'none'; media-src 'none'; frame-src 'none'; font-src 'none'; connect-src 'self'"

	# Do not send Nginx version
	server_tokens off;

	# Validate request type
	if ($request_method !~ ^(GET|HEAD|POST)$ ) {
        	return 403;
	}

	# Disable log for robots.txt
	location = /robots.txt {
		allow all;
		log_not_found off;
		access_log off;
	}

	# Deny access to private folder/s
	location /LookingGlass {
		deny all;
		return 404;
	}

	# Deny access to hidden files/folders
	location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
        return 404;
	}	
	
	# is one of a number of common tricks to overcome a particular script injection exploit
	location / {
		try_files $uri $uri/ =404;
	}

	# CSS/IMG/JS caching policy.
	location ~* \.(?:css|js|gif|jpe?g|png)$ {
	        access_log off;
	        expires 30d;
	        add_header Cache-Control public;
	        break;
	}

	# Disable Gzip for test files
	location ~* \.bin$ {
        	gzip off;
	        sendfile on;
	}
	
	# Full PHP setup. No includes necessary
	location ~ \.php$ {
		fastcgi_pass unix:/var/run/php/php7.2-fpm.sock;
		fastcgi_index  index.php;
		fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
		include        fastcgi_params;
			
		
		# Enable output buffering
		try_files $uri = 404;
        fastcgi_buffering on;
        fastcgi_buffer_size 1k;
        fastcgi_buffers 28 1k;
        fastcgi_max_temp_file_size 0;
        gzip off;
	}
	
}